FROM hexpm/elixir:1.14.0-erlang-25.0-alpine-3.18.0 AS build

# install build dependencies
RUN apt-get update -y && apt-get install -y build-essential git npm wget \
    && apt-get clean && rm -f /var/lib/apt/lists/*_*

# prepare build dir
WORKDIR /app

# install hex + rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# set build ENV
ENV MIX_ENV=prod

# install mix dependencies
COPY mix.exs mix.lock ./
COPY config config
RUN mix deps.get --only $MIX_ENV
RUN mix deps.compile

# build assets
COPY assets/package.json assets/package-lock.json ./assets/
RUN npm --prefix ./assets ci --progress=false --no-audit --loglevel=error

# assets -- copy asset files so purgecss doesnt remove css files
COPY lib/stream_closed_captioner_phoenix_web/live/ lib/stream_closed_captioner_phoenix_web/live/
COPY lib/stream_closed_captioner_phoenix_web/controllers/ lib/stream_closed_captioner_phoenix_web/controllers/

COPY priv priv
COPY assets assets

# compile assets
RUN mix assets.deploy
RUN mix phx.digest

# compile and build release
COPY lib lib
# uncomment COPY if rel/ exists
# COPY rel rel
RUN mix do compile, release

# prepare release image
FROM alpine:3.9 AS app
RUN apk add --no-cache openssl ncurses-libs

WORKDIR /app

RUN chown nobody:nobody /app

USER nobody:nobody

COPY --from=build --chown=nobody:nobody /app/_build/prod/rel/stream_closed_captioner_phoenix ./

ENV HOME=/app

CMD ["bin/stream_closed_captioner_phoenix", "start"]
